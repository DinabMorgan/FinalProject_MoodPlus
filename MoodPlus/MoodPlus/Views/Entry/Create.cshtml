@model MoodPlus.Data.TempEntry

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>TempEntry</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input type="hidden" asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
               <input type = "hidden" asp-for="PatientId" value="@ViewBag.PatientId"/>
                <span asp-validation-for="PatientId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Body" class="control-label"></label>
                <textarea asp-for="Body" class="form-control" rows="1" id="comment"></textarea>
                <span asp-validation-for="Body" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Anxiety" /> @Html.DisplayNameFor(model => model.Anxiety)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="AnxietyRating" class="control-label"></label>
                <input asp-for="AnxietyRating" class="form-control" min="0" max="5" value="0"/>
                <span asp-validation-for="AnxietyRating" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Happiness" /> @Html.DisplayNameFor(model => model.Happiness)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="HappinessRating" class="control-label"></label>
                <input asp-for="HappinessRating" class="form-control" min="0" max="5" value="0"/>
                <span asp-validation-for="HappinessRating" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Stressed" /> @Html.DisplayNameFor(model => model.Stressed)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="StressedRating" class="control-label"></label>
                <input asp-for="StressedRating" class="form-control" min="0" max="5" value="0"/>
                <span asp-validation-for="StressedRating" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Sadness" /> @Html.DisplayNameFor(model => model.Sadness)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="SadnessRating" class="control-label"></label>
                <input asp-for="SadnessRating" class="form-control" min="0" max="5" value="0"/>
                <span asp-validation-for="SadnessRating" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Overwhelmed" /> @Html.DisplayNameFor(model => model.Overwhelmed)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="OverwhelmedRating" class="control-label"></label>
                <input asp-for="OverwhelmedRating" class="form-control" min="0" max="5" value="0"/>
                <span asp-validation-for="OverwhelmedRating" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Anger" /> @Html.DisplayNameFor(model => model.Anger)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="AngerRating" class="control-label"></label>
                <input asp-for="AngerRating" class="form-control" min="0" max="5" value="0"/>
                <span asp-validation-for="AngerRating" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Calm" /> @Html.DisplayNameFor(model => model.Calm)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="CalmRating" class="control-label"></label>
                <input asp-for="CalmRating" class="form-control" min="0" max="5" value="0"/>
                <span asp-validation-for="CalmRating" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Loved" /> @Html.DisplayNameFor(model => model.Loved)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="LovedRating" class="control-label"></label>
                <input asp-for="LovedRating" class="form-control" min="0" max="5" value="0"/>
                <span asp-validation-for="LovedRating" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
